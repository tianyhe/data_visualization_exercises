"""Dice"""
from random import randint

from plotly.graph_objs import Bar, Layout
from plotly import offline

from die import Die

class Dice:
    """A class respresent multple dices."""

    def __init__(self, num_sides):
        """Initialize attributes of multiple dice."""
        self.num_dice = len(num_sides) # number of dice.
        self.num_sides = num_sides # number of sides for each dice in a list.
        self.dice = self._create_dice() # a set of dice in a list.

        self.numbers_roll = 0
        self.results = []
        self.frequencies = []
        self.max_results = sum(self.num_sides)

    def _create_dice(self):
        """Create all the dice instance."""
        dice = [Die(self.num_sides[num]) for num in range(self.num_dice)]
        return dice

    def roll_all(self):
        """Return a sum of value generated by rolling all the dices once."""
        results = [self.dice[num].roll() for num in range(self.num_dice)]
        return sum(results)

    def multi_roll_all(self, numbers_roll=2):
        """Return the results of rolling all the dice at once,
        and roll for x times in a list.
        """
        self.numbers_roll = numbers_roll
        self.results = [self.roll_all() for roll_num in range(numbers_roll)]
        return self.numbers_roll, self.results

    def frequency(self):
        """Count the frequency of the dice roll outcome."""
        self.frequencies = [
            self.results.count(value)
            for value in range(self.num_dice, self.max_results + 1)
            ]
        return self.frequencies

    def dice_histogram(self):
        """Visualize the results of the dice roll."""
        x_values = list(range(self.num_dice, self.max_results + 1))
        y_values = [Bar(x=x_values, y=self.frequencies)]

        x_axis_config = {'title': 'Result', 'dtick': 1}
        y_axis_config = {'title': 'Frequencies'}
        my_layout = Layout(
            title=f"Results of rolling D{self.num_sides} {self.numbers_roll} times",
            xaxis=x_axis_config, yaxis=y_axis_config
            )
        offline.plot(
            {'data':y_values, 'layout':my_layout},
            filename="results.html"
            )

# dice_set = Dice([6, 10])
# print(dice_set.max_results)
# dice_set.multi_roll_all(50_000)
# freq = dice_set.frequency()
# print(freq)
# dice_set.dice_histogram()
